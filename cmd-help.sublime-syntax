%YAML 1.2
---
name: Command Help
file_extensions:
  - cmd-help # doesn't really exist, but useful for the shortname
scope: text.help


variables:
### section name variables:
  # lowercase, uppercase or dash char (for compound words)
  alpha_dash: '[[:alpha:]-]'
  # all kinds of words, including those within 1/2 parentheses
  any_word: '\(?{{alpha_dash}}+\)?'
  # words starting with uppercase
  leading_word: '[:upper:]({{alpha_dash}})*\b'

### command option variables:
  option_stop: '[ \t\n,=\[<]'
  # marks seen in option names: . ? : # $ --
  option_name: '[^{{option_stop}}]+'

### command/option argument variables:
  ellipsis: '\.\.\.'
  argument_name: '[:alpha:][[:alnum:]_]*'
  allcaps_argument_name: '[:upper:][[:upper:][:digit:]_]*'


contexts:
  main:
    - match: ''
      push: [line-begin, line-indent]

  line-begin:
    - match: '^'
      set: [pre-heading, def-option]
    - include: else-pop

  line-indent:
    - match: '^\s{1,8}'
      set: [def-option]
    - include: else-pop

  else-pop:
    - match: ''
      pop: true

  pre-heading:
    - match: '(?i:usage):(?=.+\n)'
      scope: markup.heading.inline-usage.help
    # only consider lines <= 40 chars long
    - match: '^(?=.{1,40}\n)'
      set: heading
    - include: else-pop

  heading:
    - match: '{{leading_word}}( {{any_word}})*:?\n'
      scope: markup.heading.help
    # - match: '{{any_word}}( {{any_word}})*:\n'
    #   scope: markup.heading.help
    - include: else-pop

  def-option:
    - match: '^----'
      # definitely not an option
      pop: true
    - match: '-{{option_name}}'
      scope: entity.name.cmd-option.help
      set: def-option-post
    - include: else-pop

  def-option-post:
    - match: ', '
      set: def-option
    - match: ' '
      set: space-after-option
    - match: '='
      set: equals-after-option
      # alt: match directly in option-argument and colorize '=' too?
    - match: '\[=|\['
      set: square-brackets-after-option
    - include: else-pop

  space-after-option:
    - match: '<.*?>'
      scope: variable.parameter.option-argument.help
      set: option-argument-post
    - match: '{{allcaps_argument_name}}\b'
      scope: variable.parameter.option-argument.help
      set: option-argument-post
    - match: '{{argument_name}}(?=  )'
      scope: variable.parameter.option-argument.help
      set: option-argument-post
    - include: else-pop

  equals-after-option:
    - match: '{{argument_name}}'
      scope: variable.parameter.option-argument.help
      set: option-argument-post
    - include: else-pop

  square-brackets-after-option:
    - meta_content_scope: variable.parameter.option-argument.help
    - match: '(?=])'
      scope: text.help
      set: option-argument-post

  option-argument-post:
    - match: '({{ellipsis}})?'
      scope: variable.parameter.option-argument.help
      pop: true
    - include: else-pop
